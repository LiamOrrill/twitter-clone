import { type NextPage } from "next";
import Head from "next/head";
import { signIn, useSession } from "next-auth/react";
import { api, type RouterOutputs } from "@/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";

dayjs.extend(relativeTime);

type PostWithUser = RouterOutputs["post"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;

  return (
    <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
      <Image
        src={author.image || ""}
        alt={`@${author.name}'s profile image`}
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />

      <div className="flex flex-col">
        <div className="flex gap-1  text-slate-300">
          <span className="">{`@${author.name}`}</span>
          <span className=" font-thin">{` Â· ${dayjs(
            post.createdAt
          ).fromNow()}`}</span>
        </div>
        <span> {post.content}</span>
      </div>
    </div>
  );
};

const CreatePostWizard = () => {
  const { data: sessionData } = useSession();

  console.log(sessionData?.user);

  if (!sessionData) return null;

  return (
    <div className="flex w-full gap-3">
      <Image
        src={sessionData.user.image || ""}
        alt="Profile Image"
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <input placeholder="Type some emojis!" className="grow bg-transparent" />
    </div>
  );
};

const Home: NextPage = () => {
  const { data, isLoading } = api.post.getAll.useQuery();

  console.log(data);

  if (isLoading) return <div>Loading...</div>;

  if (!data) return <div>no data</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400  md:max-w-2xl">
          <div className="border-b border-slate-400 p-4">
            <AuthShowcase />
          </div>
          <div className="flex flex-col">
            {data?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  // const { data: secretMessage } = api.example.getSecretMessage.useQuery(
  //   undefined, // no input
  //   { enabled: sessionData?.user !== undefined }
  // );

  console.log(sessionData);

  return (
    <div className="">
      {sessionData ? (
        <>
          <CreatePostWizard />
        </>
      ) : (
        <button
          className="flex justify-center  text-white no-underline "
          onClick={() => void signIn()}
        >
          Sign In
        </button>
      )}

      {/* <button
        className="flex justify-center  text-white no-underline "
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button> */}
    </div>
  );
};
